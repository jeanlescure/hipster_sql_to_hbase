grammar SQLTransaction
  include SQLPrimitives

  rule transaction_statement
    start_transaction / begin / commit / rollback
  end

  rule start_transaction
    "START" SPACES "TRANSACTION" with_consistent_snapshot? {
      def query_type
        :start
      end
      def tree
        { :start => nil }
      end
    }
  end

  rule with_consistent_snapshot
    SPACES "WITH" SPACES "CONSISTENT" SPACES "SNAPSHOT"
  end

  rule begin
    "BEGIN" work? {
      def query_type
        :begin
      end
      def tree
        { :begin => nil }
      end
    }
  end

  rule work
    SPACES "WORK"
  end

  rule commit
    "COMMIT" optional_transactional_clauses {
      def query_type
        :commit
      end
      def tree
        { :commit => nil }
      end
    }
  end

  rule optional_transactional_clauses
    work? chain? release?
  end

  rule chain
    SPACES "AND" SPACES ("NO" SPACES)? "CHAIN"
  end

  rule release
    SPACES ("NO" SPACES)? "RELEASE"
  end

  rule rollback
    "ROLLBACK" optional_transactional_clauses {
      def query_type
        :rollback
      end
      def tree
        { :rollback => nil }
      end
    }
  end
end
